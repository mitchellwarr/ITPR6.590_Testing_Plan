package shoppingproject.gui;

import gui.helpers.SimpleListModel;
import javax.swing.JOptionPane;
import shoppingproject.dao.DAOException;
import shoppingproject.dao.DbDao;
import shoppingproject.dao.IDAO;
import shoppingproject.domain.Product;
import shoppingproject.gui.helpers.ValidationHelper;

/**
 * INFO221 Project Product viewer
 *
 * @author jamal572
 */
public class ProductReport extends javax.swing.JDialog {

    //instance of our product list from the DAO
    private final IDAO productsList;

    //Model used for the list provided by gui.helpers package
    private final SimpleListModel productListModel = new SimpleListModel();

    //Model used for the list provided by gui.helpers package
    private final SimpleListModel categoryListModel = new SimpleListModel();
    
    //Validation helper
    ValidationHelper validHelp = new ValidationHelper();
    

    /**
     * Creates new form ProductReport to view products
     *
     * @param modal sets whether or not parent window is accessible
     * @param parent parent window calling JDialog to open
     */
    public ProductReport(java.awt.Frame parent, boolean modal, IDAO dao) {
        super(parent, modal);
        initComponents();
        
        
        productsList = dao;
        //pull data from DAO and update list with products and categories
        productListModel.updateItems(productsList.getProductsList());
        categoryListModel.updateItems((productsList.getCategoryList()));

        //update our combobox/list to use the helper model
        lstProduct.setModel(productListModel);
        cmbFilter.setModel(categoryListModel);
        //add formating to number text fields
        validHelp.addTypeFormatter(txtSearch, "#0", Integer.class);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstProduct = new javax.swing.JList<>();
        btnCLose = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEditProduct = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();
        cmbFilter = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstProduct.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lstProduct.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProduct.setName("lstProducts"); // NOI18N
        jScrollPane1.setViewportView(lstProduct);

        btnCLose.setText("Close");
        btnCLose.setName("btnClose"); // NOI18N
        btnCLose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLoseActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEditProduct.setText("Edit Product");
        btnEditProduct.setName("btnEdit"); // NOI18N
        btnEditProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProductActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.setName("btnSearch"); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnFilter.setText("Filter");
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        cmbFilter.setName("cmbFilter"); // NOI18N
        cmbFilter.setOpaque(false);

        txtSearch.setName("txtSearch"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEditProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cmbFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCLose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(btnFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnEditProduct)
                    .addComponent(btnDelete)
                    .addComponent(btnCLose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFilter)
                    .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method used to close the ProductReport JDialog
     *
     * @param evt object generated by button clicked event for Close button
     */
    private void btnCLoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLoseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCLoseActionPerformed

    /**
     * Method used to delete a selected product
     *
     * @param evt object generated by button clicked event for Delete button
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Product selectedProduct = null;
        int choice = -99;

        try {
            //Before trying to delete an item check there is an item selected
            if (!lstProduct.isSelectionEmpty()) {
                selectedProduct = (Product) lstProduct.getSelectedValue();

                //confirm selected product is correctly selected for deletion
                choice = JOptionPane.showConfirmDialog(this,
                        "Are you sure you want to delete " + selectedProduct);

                if (choice == JOptionPane.YES_OPTION) {
                    productsList.deleteProduct(selectedProduct);
                }
            }

            productListModel.updateItems(productsList.getProductsList());
        } catch (DAOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * Method used to edit a selected product
     *
     * @param evt object generated by button clicked event for edit button
     */
    private void btnEditProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProductActionPerformed
        ProductEditor editProductDialog = null;
        Product productForEdit = null;
        try {
            if (!lstProduct.isSelectionEmpty()) {
                //get currently selected product for edit
                productForEdit = (Product) lstProduct.getSelectedValue();

                //Create instance of ProductEditor JDialog form
                editProductDialog = new ProductEditor(this, true, productForEdit, productsList);

                //set location relative to admin menu
                editProductDialog.setLocationRelativeTo(this);

                //make it visible
                editProductDialog.setVisible(true);
            }

            //update report view
            productListModel.updateItems(productsList.getProductsList());
        } catch (DAOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditProductActionPerformed

    /**
     * Method used to search for a product by ID
     *
     * @param evt object generated by button clicked event for Delete button
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //possibly crude way of error checking that search field is not null before trying to search
        try {
            if (!"".equals(txtSearch.getText())) {
                Integer productID = (Integer) txtSearch.getValue();
                productListModel.updateItems(productsList.getProduct(productID));
            } else {
                productListModel.updateItems(productsList.getProductsList());
            }
        } catch (DAOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * Method used to delete a selected product
     *
     * @param evt object generated by button clicked event for Delete button
     */
    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        //get the category to filter by
        String category = (String) cmbFilter.getSelectedItem();
        try {
            if (!"".equals(category)) {
                productListModel.updateItems(productsList.getByCategory(category));
            } else {
                productListModel.updateItems(productsList.getProductsList());
            }
        } catch (DAOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFilterActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ProductReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ProductReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ProductReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ProductReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ProductReport dialog = new ProductReport(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCLose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEditProduct;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Product> lstProduct;
    private javax.swing.JFormattedTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
